/*
    La struttura è fatta in questo modo:
    - Il body è flex
    - ALl'interno del body ho creato un flexbox-container centrato rispetto al body
    - Gli elementi del flexbox (chiamati flex-Container-element)sono disposti a colonna,
        ogni flex-Container-element contiene un elementoSX e un elementoSX
    - L'elemento è o immagine o rettangolo. Il flex-Container-element che contiene
       gli elementoSX e elementoDX è un felx normale (orizzontale) per far sì che
       immagine e foto siano allineati tra di loro (asse y) e rispetto al container (asse y)
    - La vignetta è un flexbox semplice per riga composto da triangolo + rettangolo
 */
.flexbox-container {
    position: relative;
    flex: 1; /* Utilizzo tutto lo spazio del body */
    display: flex; /* Uso il flex disposition così da allineare colonnaSx linea, colonnaDX. NB: di default è orizzontale */
    flex-direction: column;
    justify-content: center; /* In questo modo sono centrati (rispetto al cross axis X e la linea risulta perfettamente al centro dello schermo */
    align-items: center;  /* Il default è stratch, centro gli elementi verticalmente */
    width:90%; /* Così 90+5+5 è centrato */
    /*border: 10px solid black;*/
}
.flex-Container-element{
    /*Elemento= Foto o Cartoon, disposti verticalmente all'interno del flexbox-container */
    flex-grow:1; /* Voglio che occupi l'intera porzione a disposizione sia a SX che a DX nel Body*/
    justify-content: center; /* Elementi al centro (asse X) */
    align-items: center; /* Elementi al centro (asse Y) */
    display: flex;
    padding-bottom: 10%;
    /* border: 3px solid #834242; */
}
#flex-element4{
    padding-bottom: 5%;
}
.elementoSX{
    margin-right: 5%;
}
.elementoDX{
    margin-left: 5%;
}
.elementoSX,
.elementoDX{
    flex: 0 0 33%; /*They need to occupy the same space (30%)*/
}

.images{
    height: auto;
    max-width:100%;
}

#imgSX2{
    width:80%;
    height:auto;
}

.cartoon{
    /* Container del rettangolo + triangolo*/
    height: auto;
    display: flex;
    align-items:center;
    /* border: 4px solid yellow; */
}


.TriangleSX{
    /* Stesse impostazioni presenti nel CookieBanner, un po' riviste */
    width: 0;
    height: 0;
    border-right: 1em solid #a23327;
    border-top: 1em solid transparent;
    border-bottom: 1em solid transparent;
}


.TriangleDX{
    /* Stesse impostazioni presenti nel CookieBanner, un po' riviste */
    width: 0;
    height: 0;
    border-left: 1em solid #a23327;
    border-top: 1em solid transparent;
    border-bottom: 1em solid transparent;
}

.Rectangle{
    margin: auto;
    padding-right: 10px;
    padding-left: 10px;
    border: 3px solid #a23327;
    border-radius: 3px;
    background-color: #a23327;
    font-size: larger;
}


.lineaVerticale {
    position: absolute; /* Gli elementi dell'elemento centrale sono uno sopra l'altro e centrati*/
    left: 50%;
    transform: translate(-50%, 0); /* Centro rispetto alla sua dimensione*/
    border-left: 10px solid white;
    border-right: 10px solid white;
    border-radius: 8px;
    height: 100%;
}
.cerchio{
    position: absolute; /* Gli elementi dell'elemento centrale sono uno sopra l'altro e centrati*/
    left: 50%;
    top: 10vh;
    transform: translate(-50%, 0); /* Centro rispetto alla su dimensione*/
    height: 30px;
    width: 30px;
    background-color: #F5C675;
    border: 2px solid #F5EE9E;
    border-radius: 50%;
    transition: all 50ms ease-out;
}


.personaggi{
    font-style: italic;
    color: white;
}
.parole{
    color: white;
}
.anni{
    font-size: x-large;
    font-weight: bold;
    color: #96CBD9;
}
.numeri{
    font-weight: bold;
    color: #5bd529;
}